{"version":3,"file":"static/js/705.347726a1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/SearchFilter/SearchFilter.styled.jsx","components/SearchFilter/SearchFilter.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Form = styled.form`\ndisplay: flex;\ngap: 20px;\njustify-content: center;\nmargin-bottom: 20px\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nalign-items: center;\ngap: 10px;\nfont-size: 20px\n`\n\nexport const Input = styled.input`\nwidth: 130px;\nheight: 24px;\nborder: none;\nborder-radius: 3px;\nfont-size: 16px`\n\nexport const AddButton = styled.button`\nwidth: 140px;\npadding: 4px;\nbackground: #513568;\ncolor: #fff;\nborder: none;\nborder-radius: 3px;\ncursor: pointer;\ntransition: all 0.5s;\n-webkit-transition: all 0.5s;\n\n&:hover{\n  background: #321e42;\n  color: #c89cec\n  box-shadow: 0 0 20px #6fc5ff50;\n  transform: scale(1.1);\n}\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.phonebook.contacts.items;\nexport const selectFilter = state => state.phonebook.filter;\nexport const selectisLoading = state => state.phonebook.contacts.isLoading\nexport const selectError = state => state.phonebook.contacts.error\n\n\nexport const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contacts, filter) => {\n       return contacts.filter(contact => contact.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )","import { useState } from 'react';\nimport {Form, Label, Input, AddButton} from './ContactForm.styled'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact} from 'redux/reducer';\n\nexport const ContactForm =()=> {\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n const handleChange = (e) =>{\n    const {name, value} = e.target\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n    \n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return  \n    }\n  }\n\n  const contacts = useSelector(selectContacts) \n  const dispatch = useDispatch()\n\n  const handleAddContacts = newContact => {\n    const hasContactDuplicate = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (hasContactDuplicate) {\n      Notify.failure(`${newContact.name} is already in your contacts`);\n      return;\n    }\n    dispatch(addContact(newContact))\n  };\n\n  const handleSubmision = (e) =>{\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    handleAddContacts(newContact);\n    setName('')\n    setNumber(\"\")\n  }\n\n    return (\n      <Form onSubmit={handleSubmision}>\n      <Label>Name\n        <Input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          onChange={handleChange}\n        /></Label>\n        <Label>Number\n        <Input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        /></Label>\n        <AddButton type='submit'>Add contacts</AddButton>\n      </Form>\n    );\n  }\n","import styled from 'styled-components'\n\nexport const ContactItems = styled.li`\ndisplay: flex;\nalign-items: center;\ngap: 20px;\nlist-style-type: none;\n`\n\nexport const DeleteButton = styled.button`\npadding: 10px 30px;\nfont-size: 12px;\nborder: none;\nborder-radius: 3px;\ncursor: pointer;\nbackground-color:  #513568;\ncolor: #ffffff;\nfont-weight: Bold;\ntransition: all 0.5s;\n-webkit-transition: all 0.5s;\n\n&:hover{\n  background: #321e42;\n  color: #c89cec\n  box-shadow: 0 0 20px #6fc5ff50;\n  transform: scale(1.1);\n}\n`\n\nexport const SpanName = styled.span`\nfont-weight: bold;\n`\n\n\n\n","import {ContactItems, DeleteButton, SpanName} from './ContactListItem.styled'\nexport const ContactListItem = ({contact, handleDeleteContacts}) =>{\n    return(\n        <ContactItems><p><SpanName>{contact.name}:</SpanName> {contact.number}</p><DeleteButton type=\"button\" onClick={() => handleDeleteContacts(contact.id)}>Delete</DeleteButton></ContactItems>\n    )\n}","import styled from 'styled-components'\n\nexport const ContactsList = styled.ul`\nmargin:0;\npadding: 0;\ndisplay:flex;\nflex-direction: column;\nalign-items: center\n`","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport {ContactsList} from \"./ContactList.styled\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts} from 'redux/reducer';\nimport {  selectError, selectisLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { selectAuthenticated } from 'redux/authSelectors';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n\n  const dispatch = useDispatch()\n  const isLoading = useSelector(selectisLoading)\n  const error = useSelector(selectError)\n  const contacts = useSelector(selectVisibleContacts)\n  const authenticated = useSelector(selectAuthenticated)\n\n  useEffect(() => {\n    if (authenticated === true) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, authenticated]);\n  \n  const handleDeleteContacts = contactId => {\n    dispatch(deleteContact(contactId))\n  };\n\n  return (\n\n<>\n    {isLoading && <Loader/>}\n    {error && Notify.failure('Sorry, something went wrong!')}\n\n    <ContactsList>\n      {contacts && contacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} handleDeleteContacts={handleDeleteContacts}/>\n      ))}\n    </ContactsList>\n    </>\n  );\n};\n","import styled from 'styled-components'\n\nexport const FilterInput = styled.input`\nwidth: 130px;\nheight: 24px;\nborder: none;\nborder-radius: 3px;\nfont-size: 16px\n`\n\nexport const FilterLable = styled.label`\ndisplay: flex;\nalign-items: center;\ngap: 10px;\nfont-size: 20px;\njustify-content: center;\n`\n\n","import {FilterInput, FilterLable} from './SearchFilter.styled'\nimport { FaSearch } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/reducer';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter)\n    const handleFilterInputChange = e => {\n        const value = e.target.value;\n        dispatch(setFilter(value))\n      };\n    return <FilterLable>Find contacts by name<FilterInput type=\"text\" value={filter} onChange={handleFilterInputChange }/><FaSearch/></FilterLable>\n}","import styled from 'styled-components'\n\nexport const MainWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center\n`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/SearchFilter/SearchFilter';\nimport { MainWrap } from './Contacts.styled';\n\n\nconst ContactsPage = ()=>{\n    return(\n<MainWrap>\n        <h1>Phonebook</h1>\n      <ContactForm/>\n      <Filter/>\n\n      <h2>Contacts</h2>\n      <ContactList/> \n      </MainWrap>\n    )\n}\nexport default ContactsPage"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","AddButton","_templateObject4","selectContacts","state","phonebook","contacts","items","selectFilter","filter","selectisLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","useSelector","dispatch","useDispatch","_jsxs","onSubmit","preventDefault","newContact","some","Notify","concat","addContact","handleAddContacts","children","_jsx","type","pattern","title","required","onChange","ContactItems","DeleteButton","SpanName","ContactListItem","_ref","handleDeleteContacts","onClick","id","ContactsList","ContactList","authenticated","selectAuthenticated","useEffect","fetchContacts","contactId","deleteContact","_Fragment","Loader","map","FilterInput","FilterLable","Filter","setFilter","FaSearch","MainWrap"],"sourceRoot":""}